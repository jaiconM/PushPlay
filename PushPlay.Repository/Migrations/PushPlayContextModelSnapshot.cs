// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PushPlay.Repository.Contexto;

#nullable disable

namespace PushPlay.Repository.Migrations
{
    [DbContext(typeof(PushPlayContext))]
    partial class PushPlayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicaPlayList", b =>
                {
                    b.Property<Guid>("MusicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayListsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MusicasId", "PlayListsId");

                    b.HasIndex("PlayListsId");

                    b.ToTable("MusicaPlayList");
                });

            modelBuilder.Entity("PlayListUsuario", b =>
                {
                    b.Property<Guid>("PlayListsQueSegueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeguidoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlayListsQueSegueId", "SeguidoresId");

                    b.HasIndex("SeguidoresId");

                    b.ToTable("PlayListUsuario");
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<Guid?>("ArtistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Album", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Artista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Artista", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.EstiloMusical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("EstiloMusical", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7c939aa-8604-46b4-9af2-54b87d2578fa"),
                            Nome = "Rock"
                        },
                        new
                        {
                            Id = new Guid("e93cc713-4a9d-4fcd-8a64-e4c3101b5a6c"),
                            Nome = "Eletrônico"
                        },
                        new
                        {
                            Id = new Guid("38a4c33c-368f-429c-8b34-aeebc45a9521"),
                            Nome = "Lounge"
                        },
                        new
                        {
                            Id = new Guid("16901d29-6e18-4dec-9676-4250fe03c9f9"),
                            Nome = "Sertanejo"
                        },
                        new
                        {
                            Id = new Guid("71da8f31-6e4d-4653-86e1-31a3e96d02aa"),
                            Nome = "Samba"
                        },
                        new
                        {
                            Id = new Guid("324cdafb-95df-47d1-afda-47a47a0467da"),
                            Nome = "Forró"
                        },
                        new
                        {
                            Id = new Guid("726775a2-c47e-40c8-abde-0a6d03c96fb5"),
                            Nome = "MPB"
                        });
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Musica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstiloMusicalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Sequencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("EstiloMusicalId");

                    b.ToTable("Musica", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.PlayList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PlayList", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("MusicaPlayList", b =>
                {
                    b.HasOne("PushPlay.Domain.Entidades.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PushPlay.Domain.Entidades.PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlayListUsuario", b =>
                {
                    b.HasOne("PushPlay.Domain.Entidades.PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListsQueSegueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PushPlay.Domain.Entidades.Usuario", null)
                        .WithMany()
                        .HasForeignKey("SeguidoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Album", b =>
                {
                    b.HasOne("PushPlay.Domain.Entidades.Artista", null)
                        .WithMany("Albuns")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Musica", b =>
                {
                    b.HasOne("PushPlay.Domain.Entidades.Album", null)
                        .WithMany("Musicas")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PushPlay.Domain.Entidades.EstiloMusical", "EstiloMusical")
                        .WithMany()
                        .HasForeignKey("EstiloMusicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PushPlay.Domain.ValueObjects.Duracao", "Duracao", b1 =>
                        {
                            b1.Property<Guid>("MusicaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Valor")
                                .HasColumnType("int")
                                .HasColumnName("DuracaoEmSegundos");

                            b1.HasKey("MusicaId");

                            b1.ToTable("Musica");

                            b1.WithOwner()
                                .HasForeignKey("MusicaId");
                        });

                    b.Navigation("Duracao")
                        .IsRequired();

                    b.Navigation("EstiloMusical");
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.PlayList", b =>
                {
                    b.HasOne("PushPlay.Domain.Entidades.Usuario", null)
                        .WithMany("PlayLists")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Usuario", b =>
                {
                    b.OwnsOne("PushPlay.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("PushPlay.Domain.ValueObjects.Senha", "Senha", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Senha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Senha")
                        .IsRequired();
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Album", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Artista", b =>
                {
                    b.Navigation("Albuns");
                });

            modelBuilder.Entity("PushPlay.Domain.Entidades.Usuario", b =>
                {
                    b.Navigation("PlayLists");
                });
#pragma warning restore 612, 618
        }
    }
}
