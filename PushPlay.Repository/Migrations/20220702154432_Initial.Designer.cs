// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PushPlay.Repository.Contexto;

#nullable disable

namespace PushPlay.Repository.Migrations
{
    [DbContext(typeof(PushPlayContext))]
    [Migration("20220702154432_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicaPlayList", b =>
                {
                    b.Property<Guid>("MusicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayListsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MusicasId", "PlayListsId");

                    b.HasIndex("PlayListsId");

                    b.ToTable("MusicaPlayList");
                });

            modelBuilder.Entity("PlayListUsuario", b =>
                {
                    b.Property<Guid>("PlayListsQueSegueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeguidoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlayListsQueSegueId", "SeguidoresId");

                    b.HasIndex("SeguidoresId");

                    b.ToTable("PlayListUsuario");
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Album", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<Guid?>("ArtistaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Album", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Artista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Artista", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.EstiloMusical", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("EstiloMusical", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("38cac14c-3b67-40f2-bd80-a2b3eb48a0ba"),
                            Nome = "Rock"
                        },
                        new
                        {
                            Id = new Guid("b363b7b3-582f-48dc-8fe1-bb749cbc6b78"),
                            Nome = "Eletrônico"
                        },
                        new
                        {
                            Id = new Guid("31551f53-a578-4cab-91ea-112dd7629642"),
                            Nome = "Lounge"
                        },
                        new
                        {
                            Id = new Guid("80e6621e-eb1f-4522-beb0-2b6ade0e3a78"),
                            Nome = "Sertanejo"
                        },
                        new
                        {
                            Id = new Guid("12c3bec0-14c1-44fa-bac0-67d8d748a680"),
                            Nome = "Samba"
                        },
                        new
                        {
                            Id = new Guid("7d534f9b-b950-4496-8088-25b001c277d2"),
                            Nome = "Forró"
                        },
                        new
                        {
                            Id = new Guid("f65bc513-edba-4271-952d-48ac394fae3a"),
                            Nome = "MPB"
                        });
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Musica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstiloMusicalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("EstiloMusicalId");

                    b.ToTable("Musica", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.ContaContext.PlayList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PlayList", (string)null);
                });

            modelBuilder.Entity("PushPlay.Domain.ContaContext.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkFoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("MusicaPlayList", b =>
                {
                    b.HasOne("PushPlay.Domain.AlbumContext.Musica", null)
                        .WithMany()
                        .HasForeignKey("MusicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PushPlay.Domain.ContaContext.PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlayListUsuario", b =>
                {
                    b.HasOne("PushPlay.Domain.ContaContext.PlayList", null)
                        .WithMany()
                        .HasForeignKey("PlayListsQueSegueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PushPlay.Domain.ContaContext.Usuario", null)
                        .WithMany()
                        .HasForeignKey("SeguidoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Album", b =>
                {
                    b.HasOne("PushPlay.Domain.AlbumContext.Artista", null)
                        .WithMany("Albuns")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Musica", b =>
                {
                    b.HasOne("PushPlay.Domain.AlbumContext.Album", null)
                        .WithMany("Musicas")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PushPlay.Domain.AlbumContext.EstiloMusical", "EstiloMusical")
                        .WithMany()
                        .HasForeignKey("EstiloMusicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PushPlay.Domain.AlbumContext.ValueObjects.Duracao", "Duracao", b1 =>
                        {
                            b1.Property<Guid>("MusicaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Valor")
                                .HasColumnType("int")
                                .HasColumnName("DuracaoEmSegundos");

                            b1.HasKey("MusicaId");

                            b1.ToTable("Musica");

                            b1.WithOwner()
                                .HasForeignKey("MusicaId");
                        });

                    b.Navigation("Duracao")
                        .IsRequired();

                    b.Navigation("EstiloMusical");
                });

            modelBuilder.Entity("PushPlay.Domain.ContaContext.PlayList", b =>
                {
                    b.HasOne("PushPlay.Domain.ContaContext.Usuario", null)
                        .WithMany("PlayLists")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("PushPlay.Domain.ContaContext.Usuario", b =>
                {
                    b.OwnsOne("PushPlay.Domain.ContaContext.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("PushPlay.Domain.ContaContext.ValueObjects.Senha", "Senha", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)")
                                .HasColumnName("Senha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Senha")
                        .IsRequired();
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Album", b =>
                {
                    b.Navigation("Musicas");
                });

            modelBuilder.Entity("PushPlay.Domain.AlbumContext.Artista", b =>
                {
                    b.Navigation("Albuns");
                });

            modelBuilder.Entity("PushPlay.Domain.ContaContext.Usuario", b =>
                {
                    b.Navigation("PlayLists");
                });
#pragma warning restore 612, 618
        }
    }
}
